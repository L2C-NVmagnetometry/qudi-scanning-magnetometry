# Config file for a simple simulation of the core functions: Confocal, counter,
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    mydummyscanner:
        module.Class: 'confocal_scanner_dummy.ConfocalScannerDummy'
        clock_frequency: 100
        scanner_position_ranges:
            - [0e-6, 30e-6]
            - [0e-6, 30e-6]
        connect:
            fitlogic: 'fit'
            
    mydummymagneto:
        module.Class: 'NVmagnetometer_dummy.NVMagnetometerDummy'
        clock_frequency: 100
        
    mykrowave:
        module.Class: 'microwave.mw_source_dummy.MicrowaveDummy'
        gpib_address: 'dummy'
        gpib_timeout: 20
        mock: True

    mydummycounter:
        module.Class: 'slow_counter_dummy.SlowCounterDummy'
        source_channels: 4
        clock_frequency: 100
        count_distribution: 'dark_bright_poisson'
        remoteaccess: True
        
    mydummyodmrcounter:
        module.Class: 'odmr_counter_dummy.ODMRCounterDummy'
        clock_frequency: 100
        number_of_channels: 2
        connect:
            fitlogic: 'fit'

    mydummymagnet:
        module.Class: 'sc_magnet.sc_magnet_dummy.SuperConductingMagnetDummy'
        max_field_z: 5000
        max_field_x: 5000
        max_field_y: 5000
        max_current_z: 15.72
        max_current_x: 39.67
        max_current_y: 47.73

    mydummylevelmeter:
        module.Class: 'levelmeter_dummy.LevelMeterDummy'

    mydummytempcontroller:
        module.Class: 'tempcontroller_dummy.TempControllerDummy'

    mydummypowersupply:
        module.Class: 'power_supply_dummy.PowerSupplyDummy'

logic:
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mydummycounter'
            savelogic: 'save'

    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'mydummyodmrcounter'
            fitlogic: 'fit'
            microwave1: 'mykrowave'
            savelogic: 'save'
            taskrunner: 'tasklogic'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks: ['scan', 'odmr']
                needsmodules:
                    optimizer: 'optimizerlogic'

    confocallogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'mydummyscanner'
            savelogic: 'save'
            
    scanninglogic:
        module.Class: 'scanning_magnetometry_logic.MagnetometerLogic'
        connect:
            microwave1: 'mykrowave'
            confocalscanner1: 'mydummymagneto'
            savelogic: 'save'
            odmrlogic1: 'odmrlogic'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'mydummyscanner'
            fitlogic: 'fit'

    fit:
        module.Class: 'fit_logic.FitLogic'

    save:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: '~/Documents/temp/Qudi_dummy_data/'                              

    scmagnetlogic:
       module.Class: 'sc_magnet_logic.SuperConductingMagnetLogic'
       connect:
           scmagnet: 'mydummymagnet'

    cryomonitoringlogic:
        module.Class: 'cryomonitoring_logic.CryoMonitoringLogic'
        connect:
            levelmeter: 'mydummylevelmeter'
            tempcontroller: 'mydummytempcontroller'
            savelogic: 'save'

    nvorientationlogic:
        module.Class: 'nv_orientation_finder_logic.NVOrientationFinderLogic'
        connect:
            microwave1: 'mykrowave'
            savelogic: 'save'
            coilmagnetlogic: 'coilmagnetlogic'
            odmrlogic1: 'odmrlogic'
            scmagnetlogic: 'scmagnetlogic'

    coilmagnetlogic:
        module.Class: 'coil_magnet_logic.CoilMagnetLogic'
        connect:
            powersupply: 'mydummypowersupply'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'confocallogic'
            savelogic: 'save'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'


    odmr:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmrlogic'
            savelogic: 'save'

    scanninggui:
        module.Class: 'scanning_magnetometry.scanning_maingui.NVScanningGui'
        connect:
            magnetometerlogic1: 'scanninglogic'
            odmrlogic1: 'odmrlogic'

    scmagnetgui:
        module.Class: 'sc_magnet.sc_magnetgui.SCMagnetGui'
        connect:
            scmagnetlogic: 'scmagnetlogic'

    cryomonitoringgui:
        module.Class: 'cryomonitoring.cryomonitoringgui.CryomonitoringGui'
        connect:
            cryomonitoringlogic: 'cryomonitoringlogic'

    nvorientationfindergui:
        module.Class: 'nv_orientation_finder.nv_orientation_findergui.NVOrientationFinderGUI'
        connect:
            nvorientationfinderlogic: 'nvorientationlogic'
